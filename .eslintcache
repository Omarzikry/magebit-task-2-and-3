[{"/Users/omarzikry/Documents/magebit-task-2-and-3/src/index.js":"1","/Users/omarzikry/Documents/magebit-task-2-and-3/src/theme/globalStyle.js":"2","/Users/omarzikry/Documents/magebit-task-2-and-3/src/theme/theme.js":"3","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/App/App.js":"4","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Header/Header.js":"5","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/PineappleLogo/PineappleLogo.js":"6","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Navigation/Navigation.js":"7","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/DesktopPineappleImage/DesktopPineappleImage.js":"8","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/Subscribe/Subscribe.js":"9","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/TextInput/TextInput.js":"10","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Checkbox/Checkbox.js":"11","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Socials/Socials.js":"12","/Users/omarzikry/Documents/magebit-task-2-and-3/src/reportWebVitals.js":"13","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/ErrorMessage/ErrorMessage.js":"14","/Users/omarzikry/Documents/magebit-task-2-and-3/src/pages/home.js":"15","/Users/omarzikry/Documents/magebit-task-2-and-3/src/pages/subscribers.js":"16","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/SubscribeSuccess/SubscribeSuccess.js":"17","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/SubscribeForm/SubscribeForm.js":"18","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/SubscribersList/SubscribersList.js":"19"},{"size":792,"mtime":1612129961827,"results":"20","hashOfConfig":"21"},{"size":3810,"mtime":1611754826002,"results":"22","hashOfConfig":"21"},{"size":531,"mtime":1612129961829,"results":"23","hashOfConfig":"21"},{"size":1028,"mtime":1612129961824,"results":"24","hashOfConfig":"21"},{"size":489,"mtime":1611942181892,"results":"25","hashOfConfig":"21"},{"size":636,"mtime":1611697048208,"results":"26","hashOfConfig":"21"},{"size":1120,"mtime":1611697035420,"results":"27","hashOfConfig":"21"},{"size":620,"mtime":1611692719718,"results":"28","hashOfConfig":"21"},{"size":1883,"mtime":1612129961825,"results":"29","hashOfConfig":"21"},{"size":2513,"mtime":1612129961824,"results":"30","hashOfConfig":"21"},{"size":415,"mtime":1611751870338,"results":"31","hashOfConfig":"21"},{"size":8122,"mtime":1611741801215,"results":"32","hashOfConfig":"21"},{"size":362,"mtime":1611832941191,"results":"33","hashOfConfig":"21"},{"size":409,"mtime":1611757611109,"results":"34","hashOfConfig":"21"},{"size":223,"mtime":1612129961828,"results":"35","hashOfConfig":"21"},{"size":166,"mtime":1612129961828,"results":"36","hashOfConfig":"21"},{"size":870,"mtime":1612129961823,"results":"37","hashOfConfig":"21"},{"size":3671,"mtime":1612129961826,"results":"38","hashOfConfig":"21"},{"size":5817,"mtime":1612129961826,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p9s866",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"/Users/omarzikry/Documents/magebit-task-2-and-3/src/index.js",[],["85","86"],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/theme/globalStyle.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/theme/theme.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/App/App.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Header/Header.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/PineappleLogo/PineappleLogo.js",[],["87","88"],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Navigation/Navigation.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/DesktopPineappleImage/DesktopPineappleImage.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/Subscribe/Subscribe.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/TextInput/TextInput.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Checkbox/Checkbox.js",["89"],"const Checkbox = (props) => {\n  const { name, handleChange, isChecked } = props;\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        name={name}\n        onChange={handleChange}\n        checked={isChecked}\n        id={name}\n      />\n      <label htmlFor={name}>\n        <span>\n          I agree to <a href=\"#\">terms of service</a>\n        </span>\n      </label>\n    </>\n  );\n};\n\nexport default Checkbox;\n","/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/Socials/Socials.js",["90","91","92","93"],"import styled from \"styled-components\";\n\nconst SSocials = styled.div`\n  ul {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    li {\n      margin-right: 1.25rem;\n      &:last-child {\n        margin-right: 0;\n      }\n      a {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 46px;\n        height: 46px;\n        border: 2px solid ${(props) => props.theme.colors.lightGrey};\n        border-radius: 50%;\n        transition: background-color 0.3s ease, border 0.3s ease,\n          box-shadow 0.3s ease;\n        svg {\n          fill: ${(props) => props.theme.colors.black};\n          opacity: 0.3;\n          transition: fill 0.3s ease, opacity 0.3s ease;\n        }\n        &:hover {\n          svg {\n            fill: ${(props) => props.theme.colors.white};\n            opacity: 1;\n          }\n          box-shadow: 0px 20px 40px rgba(19, 24, 33, 0.3);\n        }\n      }\n      &:nth-child(1) {\n        a:hover {\n          background-color: ${(props) => props.theme.colors.facebookBlue};\n          border: 2px solid ${(props) => props.theme.colors.facebookBlue};\n        }\n      }\n      &:nth-child(4) {\n        a:hover {\n          background-color: ${(props) => props.theme.colors.youtubeRed};\n          border: 2px solid ${(props) => props.theme.colors.youtubeRed};\n        }\n      }\n      &:nth-child(3) {\n        a:hover {\n          background-color: ${(props) => props.theme.colors.twitterBlue};\n          border: 2px solid ${(props) => props.theme.colors.twitterBlue};\n        }\n      }\n      &:nth-child(2) {\n        a:hover {\n          background-color: ${(props) => props.theme.colors.instagram};\n          border: 2px solid ${(props) => props.theme.colors.instagram};\n        }\n      }\n    }\n  }\n`;\n\nconst Socials = () => {\n  return (\n    <SSocials>\n      <ul>\n        <li>\n          <a href=\"#\">\n            <svg\n              width=\"8\"\n              height=\"16\"\n              viewBox=\"0 0 8 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M5 5V3.5C5 3.23478 5.10536 2.98043 5.29289 2.79289C5.48043 2.60536 5.73478 2.5 6 2.5H7V0H5C4.20435 0 3.44129 0.31607 2.87868 0.87868C2.31607 1.44129 2 2.20435 2 3V5H0V8H2V16H5V8H7L8 5H5Z\" />\n            </svg>\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M1.35144 14.6498C-0.164562 13.1338 0.00848103 11.1079 0.00848103 7.99594C0.00848103 4.95594 -0.191562 2.88209 1.35144 1.34409C2.25912 0.492634 3.46312 0.0283075 4.70746 0.0506312C6.18046 -0.0153688 9.82744 -0.0183688 11.2994 0.0506312C14.3104 0.189631 15.8184 1.892 15.9504 4.702C16.0154 6.174 16.0194 9.81982 15.9504 11.2928C15.8414 13.6718 14.7224 14.9931 13.2394 15.5721C12.1504 15.9941 11.0865 15.992 8.00348 15.992C7.37848 15.992 6.79249 16.0008 6.24249 16.0008C4.14849 15.9988 2.57444 15.8728 1.35144 14.6498ZM13.6295 13.6307C14.6215 12.6307 14.5585 11.2909 14.5585 7.99594C14.5585 5.86094 14.5505 5.60799 14.5115 4.76499C14.3445 1.06499 11.5565 1.43979 8.00445 1.43979L7.97345 1.41977C5.83645 1.41977 5.58545 1.43081 4.73645 1.45981C1.03645 1.64981 1.41949 4.30271 1.41949 7.98471C1.41949 10.7077 1.21947 12.5029 2.33947 13.6209C3.31447 14.5989 4.65046 14.5487 7.98346 14.5487C11.2215 14.5497 12.6215 14.6387 13.6295 13.6307ZM3.90149 7.99887C3.90083 7.45953 4.00658 6.9255 4.2127 6.4271C4.41883 5.92869 4.72124 5.4759 5.10266 5.09458C5.48408 4.71325 5.93703 4.41093 6.43548 4.20493C6.93394 3.99892 7.4681 3.8931 8.00744 3.89389C9.09616 3.89389 10.1403 4.3262 10.9102 5.09604C11.68 5.86588 12.1125 6.91016 12.1125 7.99887C12.1109 9.08768 11.6769 10.1314 10.9059 10.9002C10.135 11.6691 9.09027 12.1003 8.00146 12.099C6.91407 12.099 5.87125 11.6667 5.10235 10.8978C4.33345 10.1289 3.90149 9.08626 3.90149 7.99887ZM5.34149 7.99887C5.34136 8.34893 5.41019 8.69545 5.54406 9.01889C5.67793 9.34234 5.87416 9.63655 6.12164 9.88413C6.36912 10.1317 6.66299 10.3278 6.98639 10.4618C7.30978 10.5958 7.65641 10.6649 8.00647 10.6649C8.35651 10.665 8.70315 10.5962 9.02655 10.4623C9.34995 10.3283 9.64374 10.1317 9.89117 9.88413C10.1386 9.63651 10.3348 9.34239 10.4685 9.01889C10.6022 8.69539 10.6709 8.34892 10.6705 7.99887C10.6706 7.64899 10.6018 7.30261 10.468 6.97934C10.3341 6.65607 10.1379 6.36249 9.8905 6.11508C9.6431 5.86768 9.34933 5.67128 9.02606 5.53745C8.70279 5.40362 8.35635 5.33468 8.00647 5.33481C7.65629 5.33428 7.30945 5.40283 6.98578 5.53647C6.6621 5.67011 6.36791 5.86619 6.12011 6.11362C5.87232 6.36105 5.67575 6.65489 5.54162 6.97837C5.40749 7.30184 5.33844 7.64869 5.33844 7.99887H5.34149ZM11.3155 3.73178C11.3156 3.60585 11.3405 3.48139 11.3889 3.36508C11.4372 3.24878 11.5079 3.14301 11.597 3.05405C11.6862 2.96509 11.792 2.8946 11.9084 2.84653C12.0248 2.79846 12.1495 2.77364 12.2754 2.77378C12.5296 2.77378 12.7734 2.87491 12.9532 3.05454C13.1331 3.23417 13.2342 3.47761 13.2344 3.73178C13.2346 3.85776 13.2099 3.98256 13.1617 4.09897C13.1136 4.21538 13.0429 4.32142 12.9539 4.41049C12.8648 4.49957 12.759 4.56987 12.6426 4.61801C12.5262 4.66616 12.4014 4.6909 12.2754 4.69077C12.1489 4.6913 12.0236 4.66665 11.9066 4.6185C11.7895 4.57036 11.6832 4.49992 11.5937 4.41049C11.5042 4.32107 11.4333 4.21447 11.385 4.09751C11.3367 3.98055 11.312 3.85538 11.3124 3.72885L11.3155 3.73178Z\" />\n            </svg>\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">\n            <svg\n              width=\"16\"\n              height=\"13\"\n              viewBox=\"0 0 16 13\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M16 1.5378C15.3981 1.8003 14.7616 1.97476 14.11 2.0558C14.7967 1.64843 15.3101 1.00336 15.553 0.242799C14.91 0.624135 14.2065 0.892673 13.473 1.0368C13.0232 0.556934 12.4395 0.223395 11.7977 0.0794801C11.1559 -0.0644347 10.4856 -0.0120742 9.87399 0.229764C9.26233 0.471602 8.73751 0.891745 8.36767 1.43564C7.99782 1.97954 7.80004 2.62207 7.8 3.2798C7.79741 3.53118 7.8229 3.78207 7.876 4.0278C6.57106 3.96421 5.29424 3.62591 4.12902 3.03502C2.96379 2.44414 1.93639 1.61397 1.114 0.598798C0.69185 1.32042 0.561093 2.17597 0.74843 2.99073C0.935767 3.8055 1.42707 4.51803 2.122 4.9828C1.60309 4.97014 1.09481 4.83296 0.64 4.5828V4.6188C0.641802 5.37598 0.903939 6.10952 1.38243 6.69635C1.86093 7.28318 2.52668 7.68761 3.268 7.8418C2.98739 7.91575 2.69819 7.95207 2.408 7.9498C2.19959 7.95351 1.99139 7.93473 1.787 7.8938C1.99894 8.54482 2.40749 9.11414 2.95639 9.52335C3.5053 9.93257 4.16756 10.1616 4.852 10.1788C3.69103 11.0871 2.25908 11.5801 0.785 11.5788C0.522491 11.5783 0.260287 11.5609 0 11.5268C1.49988 12.4933 3.24768 13.0046 5.032 12.9988C6.26023 13.0073 7.4779 12.7717 8.61431 12.3057C9.75071 11.8396 10.7832 11.1524 11.6518 10.284C12.5204 9.4156 13.2078 8.38327 13.6741 7.24696C14.1404 6.11065 14.3762 4.89303 14.368 3.6648C14.368 3.5198 14.363 3.3798 14.356 3.2408C15.003 2.77779 15.5601 2.20068 16 1.5378Z\" />\n            </svg>\n          </a>\n        </li>\n        <li>\n          <a href=\"#\">\n            <svg\n              width=\"16\"\n              height=\"11\"\n              viewBox=\"0 0 16 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M8.00391 11C6.05691 11 3.55597 10.97 2.54297 10.913C1.61497 10.849 1.12871 10.7321 0.678711 9.93506C0.228711 9.13806 0 7.73496 0 5.50696V5.49695C0 3.23695 0.208711 1.86904 0.678711 1.06104C1.11271 0.294035 1.58392 0.147041 2.54492 0.092041C3.56592 0.024041 6.12391 0 8.00391 0C9.88391 0 12.435 0.024041 13.458 0.092041C14.419 0.147041 14.8913 0.292035 15.3203 1.06104C15.7913 1.86104 16.001 3.22802 16.001 5.49902V5.50598C16.001 7.77798 15.7923 9.14501 15.3223 9.93701C14.8923 10.699 14.422 10.849 13.458 10.913C12.448 10.969 9.94991 11 8.00391 11ZM6.00391 2.5V8.5L11.0039 5.5L6.00391 2.5Z\" />\n            </svg>\n          </a>\n        </li>\n      </ul>\n    </SSocials>\n  );\n};\n\nexport default Socials;\n","/Users/omarzikry/Documents/magebit-task-2-and-3/src/reportWebVitals.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/ErrorMessage/ErrorMessage.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/pages/home.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/pages/subscribers.js",[],"/Users/omarzikry/Documents/magebit-task-2-and-3/src/components/SubscribeSuccess/SubscribeSuccess.js",["94"],"import styled from \"styled-components\";\nimport successImg from \"../../assets/imgs/ic_success.svg\";\n\nconst SSubscribeForm = styled.div`\n  width: 60%;\n  margin: 0 auto;\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 1.25rem;\n  }\n  p {\n    color: ${(props) => props.theme.colors.grey};\n  }\n  img {\n    margin-bottom: 1.9rem;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    h2 {\n      font-size: 1.5rem;\n      margin-bottom: 0.625rem;\n    }\n    p {\n      font-size: 0.875rem;\n    }\n    img {\n      margin-bottom: 2.5rem;\n    }\n  }\n`;\n\nconst SubscribeSuccess = () => {\n  return (\n    <SSubscribeForm>\n      <img src={successImg} />\n      <h2>Thanks for subscribing!</h2>\n      <p>\n        You have successfully subscribed to our email listing. Check your email\n        for the discount code.\n      </p>\n    </SSubscribeForm>\n  );\n};\n\nexport default SubscribeSuccess;\n","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/SubscribeForm/SubscribeForm.js",["95"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Checkbox from \"../../components/Checkbox/Checkbox\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport TextInput from \"../../components/TextInput/TextInput\";\n\nconst SInputWrapper = styled.div`\n  position: relative;\n  left: 100px;\n  margin-bottom: 3.125rem;\n  @media (max-width: 768px) {\n    left: unset;\n    margin-bottom: 1.25rem;\n  }\n`;\n\nconst SCheckboxWrapper = styled.div`\n  margin-left: 8.75rem;\n  @media (max-width: 768px) {\n    margin-left: unset;\n  }\n`;\n\nconst SubscribeForm = (props) => {\n  const { setSubmitted } = props;\n  const [values, setValues] = useState({\n    email: \"\",\n    termsCheckbox: false,\n  });\n  const [emailError, setEmailError] = useState();\n  const [termsError, setTermsError] = useState();\n\n  const handleChange = (e) => {\n    const { name, value, checked, type } = e.target;\n    setValues({\n      ...values,\n      [name]: type !== \"checkbox\" ? value : checked,\n    });\n\n    // validate inputs and set error messages\n    if (type === \"email\") {\n      setEmailError(validateEmail(value));\n      return;\n    }\n    if (type === \"checkbox\" && checked === false) {\n      setTermsError(\"You must accept the terms and conditions\");\n    } else {\n      setTermsError(null);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"email\", values.email.toLowerCase().replace(/\\s/g, \"\"));\n    formData.append(\"timeStamp\", Date.now());\n\n    // using axios to post to php rest api contacts.php\n    axios({\n      method: \"post\",\n      url: \"/api/contacts.php\",\n      data: formData,\n      config: { headers: { \"Content-Type\": \"multipart/form-data\" } },\n    })\n      .then(function (response) {\n        //handle success\n        setSubmitted(true);\n      })\n      .catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n  };\n\n  // validate email function returning the error according to the type of the error\n  const validateEmail = (email) => {\n    const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\n    if (/^[a-zA-Z0-9_.+-]+@(?:[a-zA-Z0-9-]+)\\.co$/.test(email)) {\n      return \"We are not accepting subscriptions from Colombia emails\";\n    }\n    if (emailRegex.test(email)) {\n      return null;\n    }\n    if (email.trim() === \"\") {\n      return \"Email is required\";\n    }\n    return \"Please enter a valid email\";\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SInputWrapper>\n        <TextInput\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Type your email address here…\"\n          value={values.email}\n          handleChange={handleChange}\n          disabled={\n            !values.termsCheckbox ||\n            !values.email ||\n            !!emailError ||\n            !!termsError\n          }\n        />\n        <ErrorMessage error={emailError} />\n      </SInputWrapper>\n      <SCheckboxWrapper>\n        <Checkbox\n          name=\"termsCheckbox\"\n          handleChange={handleChange}\n          isChecked={values.termsCheckbox}\n        />\n        <ErrorMessage error={termsError} />\n      </SCheckboxWrapper>\n    </form>\n  );\n};\n\nexport default SubscribeForm;\n","/Users/omarzikry/Documents/magebit-task-2-and-3/src/containers/SubscribersList/SubscribersList.js",["96"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst SubscribersList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [emailDeleted, setEmailDeleted] = useState(1);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [dateAsc, setDateAsc] = useState(true);\n  const [emailAsc, setEmailAsc] = useState(true);\n  const [domains, setDomains] = useState();\n  const [filteredContacts, setFilteredContacts] = useState();\n\n  useEffect(() => {\n    // use axios to get contacts from php rest api\n    axios.get(\"/api/contacts.php\").then((response) => {\n      setContacts(response.data);\n      mapFilterButtons(response.data);\n    });\n\n    // add is deleting variable so use effect runs every time element deletes\n  }, [emailDeleted]);\n\n  // handle delete email\n  const emailDeleteHandler = (id) => {\n    if (isDeleting) return;\n    setIsDeleting(true);\n    axios.delete(`/api/contacts.php?del=${id}`).then(() => {\n      setEmailDeleted(emailDeleted + 1);\n      setIsDeleting(false);\n    });\n  };\n\n  const sortBy = (sortBy) => {\n    const sortContacts = filteredContacts ? filteredContacts : contacts;\n\n    let newContacts;\n\n    // sortBy date\n    if (sortBy === \"date\" && dateAsc) {\n      newContacts = sortContacts.sort(\n        (a, b) => parseFloat(b.timeStamp) - parseFloat(a.timeStamp)\n      );\n      setNewContactsHandler(newContacts);\n      setDateAsc(false);\n      return;\n    } else if (sortBy === \"date\" && !dateAsc) {\n      newContacts = sortContacts.sort(\n        (a, b) => parseFloat(a.timeStamp) - parseFloat(b.timeStamp)\n      ); // For ascending sort\n      setNewContactsHandler(newContacts);\n      setDateAsc(true);\n      return;\n    }\n\n    // sortBy email\n    if (sortBy === \"email\" && emailAsc) {\n      newContacts = sortContacts.sort(\n        (a, b) => (a.email > b.email) - (a.email < b.email)\n      );\n      setNewContactsHandler(newContacts);\n      setEmailAsc(false);\n      return;\n    } else if (sortBy === \"email\" && !emailAsc) {\n      newContacts = sortContacts.sort(\n        (a, b) => (a.email < b.email) - (a.email > b.email)\n      );\n      setNewContactsHandler(newContacts);\n      setEmailAsc(true);\n      return;\n    }\n  };\n\n  const setNewContactsHandler = (newContacts) => {\n    filteredContacts\n      ? setFilteredContacts(newContacts)\n      : setContacts(newContacts);\n  };\n\n  const mapFilterButtons = (contacts) => {\n    let domainArr = [];\n    contacts.map((contact) => {\n      const domain = contact.email.split(\"@\")[1].split(\".\")[0];\n      domainArr.push(domain);\n    });\n    domainArr = [...new Set(domainArr)];\n    setDomains(domainArr);\n  };\n\n  const filterByDomain = (domain) => {\n    // check if email domain match the picked domain\n    const newContacts = contacts.filter(\n      (contact) => contact.email.split(\"@\")[1].split(\".\")[0] === domain\n    );\n    setFilteredContacts(newContacts);\n  };\n\n  // convert timestamp to date\n\n  // const timeConverter = (timestamp) => {\n  //   var a = new Date(timestamp * 1000);\n  //   var months = [\n  //     \"Jan\",\n  //     \"Feb\",\n  //     \"Mar\",\n  //     \"Apr\",\n  //     \"May\",\n  //     \"Jun\",\n  //     \"Jul\",\n  //     \"Aug\",\n  //     \"Sep\",\n  //     \"Oct\",\n  //     \"Nov\",\n  //     \"Dec\",\n  //   ];\n  //   var year = a.getFullYear();\n  //   var month = months[a.getMonth()];\n  //   var date = a.getDate();\n  //   var hour = a.getHours();\n  //   var min = a.getMinutes();\n  //   var sec = a.getSeconds();\n  //   var time =\n  //     date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n  //   return time;\n  // };\n  return (\n    <>\n      <div>\n        <h3>Sort</h3>\n        <button\n          onClick={() => {\n            sortBy(\"date\");\n          }}\n        >\n          Sort By Date\n        </button>\n        <button\n          onClick={() => {\n            sortBy(\"email\");\n          }}\n        >\n          Sort By Email\n        </button>\n      </div>\n      <div>\n        <h3>Filter By Email</h3>\n        {domains &&\n          domains.map((domain) => (\n            <button\n              onClick={() => {\n                filterByDomain(domain);\n              }}\n            >\n              {domain}\n            </button>\n          ))}\n        <button\n          onClick={() => {\n            setFilteredContacts(undefined);\n          }}\n        >\n          Reset Filters\n        </button>\n      </div>\n\n      <table>\n        <thead>\n          <th>id</th>\n          <th>email</th>\n          <th>date</th>\n        </thead>\n        <tbody>\n          {contacts &&\n            !filteredContacts &&\n            contacts.map((contact) => {\n              return (\n                <tr>\n                  <td>{contact.id}</td>\n                  <td>{contact.email}</td>\n                  <td>{`${new Date(parseFloat(contact.timeStamp))}`}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        emailDeleteHandler(contact.id);\n                      }}\n                    >\n                      delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          {contacts &&\n            filteredContacts &&\n            filteredContacts.map((contact) => {\n              return (\n                <tr>\n                  <td>{contact.id}</td>\n                  <td>{contact.email}</td>\n                  <td>{`${new Date(parseFloat(contact.timeStamp))}`}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        emailDeleteHandler(contact.id);\n                      }}\n                    >\n                      delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default SubscribersList;\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":15,"column":22,"nodeType":"105","endLine":15,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":70,"column":11,"nodeType":"105","endLine":70,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":83,"column":11,"nodeType":"105","endLine":83,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":96,"column":11,"nodeType":"105","endLine":96,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":109,"column":11,"nodeType":"105","endLine":109,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":36,"column":7,"nodeType":"105","endLine":36,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":79,"column":24,"nodeType":"110","messageId":"111","endLine":79,"endColumn":472},{"ruleId":"112","severity":1,"message":"113","line":80,"column":28,"nodeType":"114","messageId":"115","endLine":80,"endColumn":30},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]